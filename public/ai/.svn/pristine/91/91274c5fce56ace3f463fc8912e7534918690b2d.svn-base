<?php
$return_url = '';
if ($_REQUEST['rurl'] != '') {
    $return_url = URL . trim($_REQUEST['rurl']). '&sortField='
    .trim($_REQUEST['sortField'])
    . '&sortOrderBy=' . trim($_REQUEST['sortOrderBy'])
    . '&page=' . trim($_REQUEST['page']);
}

$product_obj = create_model_object($db_obj, 'product/', 'Product');

$page_url = URL.$_SERVER['QUERY_STRING'];

//process POST vars
if(!empty($_POST['submit'])){
    //create validation arrays
    $validation_array[] = array('value' => t('Name'),'type' => 'input_text',
    'required' => TRUE,'vtype' => 3,'vmax' => 50);
    $data_array[]   = array('name' => $_POST['name']);
    $column_array[] = 'name';

    $validation_array[] = array('value' => t('Product Number'),'type' => 'input_text',
	'required' => TRUE,'vtype' => 2,'vmax' => 50);
    $data_array[]   = array('product_number' => $_POST['product_number']);
    $column_array[] = 'product_number';

	$validation_array[] = array('value' => t('Length'),'type' => 'input_text',
	'required' => TRUE,'vtype' => 1,'vmax' => 11);
    $data_array[]   = array('length' => $_POST['length']);
    $column_array[] = 'length';

	$validation_array[] = array('value' => t('Breadth'),'type' => 'input_text',
	'required' => TRUE,'vtype' => 1,'vmax' => 11);
    $data_array[]   = array('breadth' => $_POST['breadth']);
    $column_array[] = 'breadth';

    $validation_array[] = array('value' => t('Width'),'type' => 'input_text',
    'required' => TRUE,'vtype' => 1,'vmax' => 11);
    $data_array[]   = array('width' => $_POST['width']);
    $column_array[] = 'width';

    $validation_array[] = array('value' => t('Dimension Unit'),'type' => 'input_text',
    'required' => TRUE,'vtype' => 3,'vmax' => 20);
    $data_array[]   = array('dimension_unit' => $_POST['dimension_unit']);
    $column_array[] = 'dimension_unit';

    $validation_array[] = array('value' => t('Status'),'type' => 'radio',
    'required' => TRUE,
	'vtype' => 0,'vmax' => 0,'enum'=>'1~0');
    $data_array[]   = array('is_active' => $_POST['is_active']);
    $column_array[] = 'is_active';

    $cnt = count($validation_array);
    $error_flag = false;
    $success_flag = false;
    for($i=0;$i<$cnt;$i++){
        if(!$utility_obj->validate_form_field($validation_array[$i],$data_array[$i],
        $column_array[$i])){
            $error_flag = true;
            $utility_obj->set_flash_message($_SESSION['errorMessage'],'error');
            break;
        }
    }

    if(!$error_flag){
        //check duplicate values
        if($product_obj->check_duplicate_column('name',$_POST['name'])){
            $error_flag = true;
            $utility_obj->set_flash_message(t('This product name already exists'),
            'error');
        }

        // Check duplicate master value
        if($product_obj->check_duplicate_refference($_POST['manufacturer_id'],$_POST['size_id'],$_POST['plant_id'],$_POST['texture_id'],$_POST['color_id'])){
            $error_flag = true;
            $utility_obj->set_flash_message(t('All the reffernces already exists'),
            'error');
        }

		$image_name='';
		if(!$error_flag){
			$target_path = PRODUCT_IMAGE_PHYSICAL_PATH;
			if (!empty($_FILES['image_path']['name'])) {
				$temp_file = $_FILES['image_path']['tmp_name'];
				$temp_name = $_FILES['image_path']['name'];
				$file_parts = pathinfo($_FILES['image_path']['name']);
				$image_name = 'product'.time().'.'.$file_parts['extension'];
				$target_file = rtrim($target_path,'/') . '/' . $image_name;
				$file_types = array('jpg','jpeg','gif','png');
				if($_FILES['image_path']['name'] !=''
				 && $_FILES['image_path']['tmp_name'] == ''){
					$utility_obj->set_flash_message(t('Manimum file size exceeds'),
					'error');
				}
				else if($_FILES['image_path']['size']>IMAGE_MAX_UPLOAD_B){
					$utility_obj->set_flash_message(t('Maximum file size exceeds'),
					'error');
				}
				else if (in_array(strtolower($file_parts['extension']),$file_types)){
					$utility_obj->make_thumbnail_image($temp_file,$target_file,PRODUCT_IMAGE_WIDTH);
				} else {
					$utility_obj->set_flash_message(t('Invalid file type.'),
					'error');
				}

			}
		}

        if(!$error_flag){
            $data['name']               = $_POST['name'];
            $data['product_number']     = $_POST['product_number'];
            $data['description']        = $_POST['description'];
            $data['catalog']            = $_POST['catalog'];
            $data['length']             = $_POST['length'];
            $data['breadth']            = $_POST['breadth'];
            $data['width']              = $_POST['width'];
			$data['dimension_unit']		= trim($_POST['dimension_unit']);
			$data['image_path']		    = $image_name;
            $data['is_active']		    = $_POST['is_active'];

            $product_id = $return_id = $product_obj->save_product_data($data);
            if( $return_id ) {
                $data                   = array();
                $data['manufacturer_id']= $_POST['manufacturer_id'];
                $data['size_id']        = $_POST['size_id'];
                $data['plant_id']       = $_POST['plant_id'];
                $data['texture_id']     = $_POST['texture_id'];
                $data['color_id']       = $_POST['color_id'];
                $data['product_id']     = $product_id;
                $data['has_image']      = '0';
                $return_id = $product_obj->save_product_references_data($data);

                if( $return_id ) {
                    $data                                   = array();
                    $data['leed_distance']                  = $_POST['leed_distance'];
                    $data['recommended_cleaning']           = $_POST['recommended_cleaning'];
                    $data['astm_type']                      = $_POST['astm_type'];
                    $data['master_format_2010']             = $_POST['master_format_2010'];
                    $data['astm_specification']             = $_POST['astm_specification'];
                    $data['test_date']                      = $_POST['test_date'];
                    $data['efflorescence']                  = $_POST['efflorescence'];
                    $data['percent_void']                   = $_POST['percent_void'];
                    $data['min_thickness_of_face_shells']   = $_POST['min_thickness_of_face_shells'];
                    $data['equivalent_web_thickness']       = $_POST['equivalent_web_thickness'];
                    $data['recycled_content_percent']       = $_POST['recycled_content_percent'];
                    $data['qty_per_sf']                     = $_POST['qty_per_sf'];
                    $data['product_water_absorption_types'] = $_POST['product_water_absorption_types'];
                    $data['weight_pounds']                  = $_POST['weight_pounds'];
                    $data['compressive_strength_psi']       = $_POST['compressive_strength_psi'];
                    $data['specifications']                 = $_POST['specifications'];
                    $data['product_id']                     = $product_id;
                    $return_id = $product_obj->save_product_details_data($data);

                    if($return_id) {
                         $success_flag = true;
                        $utility_obj->set_flash_message(t('Data saved successfully'),
                        'success');
                        $page_urlArray = explode('rurl', $_SERVER['QUERY_STRING']);
                        $utility_obj->redirect_user(URL.'product/ProductAdd&fancy=1');
                        exit;
                    }
                    else {
                        $error_flag = true;
                        $utility_obj->set_flash_message(t('Product Details data could not be saved'),
                    'error');
                    }
                }
                else {
                    $error_flag = true;
                    $utility_obj->set_flash_message(t('Product References data could not be saved'),
                'error');
                }
            }
            else{
                $error_flag = true;
                $utility_obj->set_flash_message(t('Product data could not be saved'),
                'error');
            }
        }
    }
}

// Get manufacturer details
$manufacturer_obj = create_model_object($db_obj, 'manufacturer/', 'Manufacturer');

$manufacturers_data  = $manufacturer_obj->get_manufacturer_list(' company ASC', '', '');
$manufacturers_array = array();
$manufacturers_array[] = t('Select');
if(is_array($manufacturers_data) && count($manufacturers_data)){
    foreach ($manufacturers_data as $manufacturer){
        $manufacturers_array[$manufacturer['id']] = $manufacturer['company'];
    }
}
$selected_manufacturer = trim($_POST['manufacturer_id']);

// Get plant details
$plant_obj = create_model_object($db_obj, 'plant/', 'Plant');

$plant_data  = $plant_obj->get_plant_list(' plant_name ASC', '', '');
$plant_array = array();
$plant_array[] = t('Select');
if(is_array($plant_data) && count($plant_data)){
    foreach ($plant_data as $plant){
        $plant_array[$plant['id']] = $plant['plant_name'];
    }
}
$selected_plant = trim($_POST['plant_id']);

// Get size details
$size_obj = create_model_object($db_obj, 'size/', 'Size');

$size_data  = $size_obj->get_size_list(' name ASC', '', '');
$size_array = array();
$size_array[] = t('Select');
if(is_array($size_data) && count($size_data)){
    foreach ($size_data as $size){
        $size_array[$size['id']] = $size['name'];
    }
}
$selected_size = trim($_POST['size_id']);

// Get texture details
$texture_obj = create_model_object($db_obj, 'texture/', 'Texture');

$texture_data  = $texture_obj->get_texture_list(' name ASC', '', '');
$texture_array = array();
$texture_array[] = t('Select');
if(is_array($texture_data) && count($texture_data)){
    foreach ($texture_data as $texture){
        $texture_array[$texture['id']] = $texture['name'];
    }
}
$selected_texture = trim($_POST['texture_id']);

// Get color details
$color_obj = create_model_object($db_obj, 'color/', 'Color');

$color_data  = $color_obj->get_color_list(' name ASC', '', '');
$color_array = array();
$color_array[] = t('Select');
if(is_array($color_data) && count($color_data)){
    foreach ($color_data as $color){
        $color_array[$color['id']] = $color['name'];
    }
}
$selected_color = trim($_POST['color_id']);


$noRecords = false;
if(isset($_REQUEST['_f']) && $_REQUEST['_f']=='duplicate'){
    $pk_field = trim($_REQUEST['id']);
    $result_set  = $product_obj->load_product_details($pk_field);
    if(isset($_POST['manufacturer_id'])){
        $selected_manufacturer = trim($_POST['manufacturer_id']);
    } else {
        $selected_manufacturer = $result_set['manufacturer_id'];
    }

    if(isset($_POST['plant_id'])){
        $selected_plant = trim($_POST['plant_id']);
    } else {
        $selected_plant = $result_set['plant_id'];
    }

    if(isset($_POST['size_id'])){
        $selected_size = trim($_POST['size_id']);
    } else {
        $selected_size = $result_set['size_id'];
    }

    if(isset($_POST['texture_id'])){
        $selected_texture = trim($_POST['texture_id']);
    } else {
        $selected_texture = $result_set['texture_id'];
    }

    if(isset($_POST['color_id'])){
        $selected_color = trim($_POST['color_id']);
    } else {
        $selected_color = $result_set['color_id'];
    } 
}
require_once('./view/product/ProductAdd.php');
?>