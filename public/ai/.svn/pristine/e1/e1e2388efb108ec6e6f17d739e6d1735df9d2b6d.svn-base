<?php

/**
 * Product Class provides functions that simply perform the actions
 * like get total products, get product list, load product details, check duplicate
 * product name, delete product, etc.
 * @author     	: rasingh - Q3tech
 * @created on  : Aug 29, 2014
 * @modified on : Aug 29, 2014
 */
class Product {

	private $db_connection = NULL;
    private $table_product = '';
	private $table_references = '';

	/**
	 * This is a constructor function where variables are intialized automatically
	 * when object is created of this class
	 * @param object $db_obj
	 * @return null
	 */
	public function __construct($db_obj) {
		$this->db_connection = $db_obj;
        $this->table_product = $this->db_connection->get_table_mapping('products');
		$this->table_product_details = $this->db_connection->get_table_mapping('product_details');
	}

	/**
     * This function is used to get count of total products
	 * @param string $search
     * @return int
     */
    public function get_total_products($search = '') {
		$query  = "SELECT COUNT(prd.id) as cnt FROM ".$this->table_product ." as prd";
		if($search!=''){
			$query .= ' WHERE (prd.name LIKE "%'.$search.'%"
			OR
				prd.product_number LIKE "%'.$search.'%"
			 OR
				prd.description LIKE "%'.$search.'%"
			 OR
				prd.catalog LIKE "%'.$search.'%"
			OR
                IF(prd.is_active=1,"'.t('Yes').'","'.t('No').'")
                LIKE "%'.$search.'%" )';
		}
		$result = $this->db_connection->sql_single_query($query);
		return $result['cnt'];
	}

	/**
     * This function is used to get product list
	 * @param string $order_by_clause
	 * @param int $limit
	 * @param string $search
     * @return object
     */
    public function get_product_list($order_by_clause = ' id ASC',
    	$limit = '', $search = '') {
		$query = "SELECT prd.id, prd.name, prd.product_number,
		IF(prd.image_path = '', '--',CONCAT('<img src=".'"'.PRODUCT_IMAGE_ROOT_PATH
		."/',prd.image_path,'" .'" '. "width=".'"150"'." />') ) as image_path,
		prd.length, prd.breadth, prd.width, prd.dimension_unit,
		IF(prd.is_active = 1,'".t("Yes")."','".t("No")."') as IsActive
		FROM ".$this->table_product ." as prd ";
		if($search!=''){
			$query .= ' WHERE (prd.name LIKE "%'.$search.'%"
			OR
				prd.product_number LIKE "%'.$search.'%"
			 OR
				prd.description LIKE "%'.$search.'%"
			 OR
				prd.catalog LIKE "%'.$search.'%"
			OR				
                IF(prd.is_active=1,"'.t('Yes').'","'.t('No').'")
                LIKE "%'.$search.'%" )';

		}
		$query .= " ORDER BY $order_by_clause $limit";

		return $this->db_connection->select($query);
	}

	/**
     * This function is used to get product detail based on product id
	 * @param int $id
     * @return object
     */
    public function load_product_details($id = '') {
		$query = 'SELECT * FROM '.$this->table_product;
		if($id!=''){
			$query .= ' WHERE id='.$this->db_connection->mysql_data_encode($id);
		}
		return $this->db_connection->sql_single_query($query);
	}

	/**
     * This function is used to check duplicate product name
	 * @param string $column_name
	 * @param string $data
	 * @param int $id
     * @return int
     */
    public function check_duplicate_column($column_name, $data, $id = '') {
		$query = 'SELECT COUNT(*) AS cnt FROM '.$this->table_product.'
			WHERE '.$column_name.'="'
			.$this->db_connection->mysql_data_encode($data).'"';
		if($id!=''){
			$query .= ' AND id != '
				.$this->db_connection->mysql_data_encode($id);
		}
		$result = $this->db_connection->sql_single_query($query);
		return $result['cnt'];
	}

	/**
     * This function is used to save data into the database
	 * @param string $data_array
     * @return int
     */
    public function save_product_data($data_array) {
		
		if(isset($data_array['pk'])){
		    echo $query = 'UPDATE '.$this->table_product.' SET
            name="'.$this->db_connection
		    	->mysql_data_encode($data_array['name']).'",
			image_path="'.$this->db_connection
		    	->mysql_data_encode($data_array['image_path']).'",
			product_number="'.$this->db_connection
		    	->mysql_data_encode($data_array['product_number']).'",
			description="'.$this->db_connection
		    	->mysql_data_encode($data_array['description']).'",
			catalog="'.$this->db_connection
		    	->mysql_data_encode($data_array['catalog']).'",
			length="'.$this->db_connection
		    	->mysql_data_encode($data_array['length']).'",
			breadth="'.$this->db_connection
		    	->mysql_data_encode($data_array['breadth']).'",
			width="'.$this->db_connection
		    	->mysql_data_encode($data_array['width']).'",
			dimension_unit="'.$this->db_connection
		    	->mysql_data_encode($data_array['dimension_unit']).'",
            is_active="'.$this->db_connection
		    	->mysql_data_encode($data_array['is_active']).'",
            modified_by = '.$_SESSION['USER_ID'].',
            modified_at ="'.time().'"
			WHERE id='.$this->db_connection->mysql_data_encode($data_array['pk']);
			return $this->db_connection->edit($query);
		}else{
			$query = 'INSERT INTO '.$this->table_product.' (manufacturer_id,name,image_path,
			is_active,product_number,description,catalog,length,breadth,width,dimension_unit,created_by,created_at)
			VALUES("'.$this->db_connection
		  	->mysql_data_encode($data_array['manufacturer_id']).'","'
			.$this->db_connection->mysql_data_encode($data_array['name']).'","'
			.$this->db_connection->mysql_data_encode($data_array['image_path']).'","'
			.$this->db_connection->mysql_data_encode($data_array['is_active']).'","'
			.$this->db_connection->mysql_data_encode($data_array['product_number']).'","'
			.$this->db_connection->mysql_data_encode($data_array['description']).'","'
			.$this->db_connection->mysql_data_encode($data_array['catalog']).'","'
			.$this->db_connection->mysql_data_encode($data_array['length']).'","'
			.$this->db_connection->mysql_data_encode($data_array['breadth']).'","'
			.$this->db_connection->mysql_data_encode($data_array['width']).'","'
			.$this->db_connection->mysql_data_encode($data_array['dimension_unit']).'",'
			.$_SESSION['USER_ID'].',"'.time().'")';
			$returnId = $this->db_connection->insert($query);			
					
			return $returnId;
		}
	}

	/**
     * This function is used to delete product
	 * @param int $id
     * @return null
     */
	public function delete_product($id){
		$query  = 'DELETE FROM '.$this->table_product;
		$query .= ' WHERE id = "'.$id.'"';
		$this->db_connection->delete($query);
	}

}
?>