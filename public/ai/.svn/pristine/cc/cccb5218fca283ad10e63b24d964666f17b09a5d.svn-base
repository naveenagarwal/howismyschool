<?php
$return_url = '';
if ($_REQUEST['rurl'] != '') {
    $return_url = URL . trim($_REQUEST['rurl']). '&sortField='
    .trim($_REQUEST['sortField'])
    . '&sortOrderBy=' . trim($_REQUEST['sortOrderBy'])
    . '&page=' . trim($_REQUEST['page']);
}

//load model class
include_once('./model/product/Product.php');
$product_obj = new Product($db_obj);

$page_url = URL.$_SERVER['QUERY_STRING'];


//process POST vars
if(!empty($_POST['submit'])){
    foreach ($_POST as &$value) {
     $value = trim($value);
    }
    //create validation arrays
    $validation_array[] = array('value' => t('Name'),'type' => 'input_text',
	'required' => TRUE,'vtype' => 2,'vmax' => 255);
    $data_array[]   = array('name' => $_POST['name']);
    $column_array[] = 'name';

	$validation_array[] = array('value' => t('Manufacturer'),'type' => 'radio',
    'required' => TRUE,'vtype' => 0,'vmax' => 1);
    $data_array[]   = array('manufacturer_id' => $_POST['manufacturer_id']);
    $column_array[] = 'manufacturer_id';
	
	$validation_array[] = array('value' => t('Product Number'),'type' => 'input_text',
	'required' => TRUE,'vtype' => 2,'vmax' => 50);
    $data_array[]   = array('product_number' => $_POST['product_number']);
    $column_array[] = 'product_number';
	
	$validation_array[] = array('value' => t('Catalog'),'type' => 'input_text',
	'required' => TRUE,'vtype' => 3,'vmax' => 255);
    $data_array[]   = array('catalog' => $_POST['catalog']);
    $column_array[] = 'catalog';

	$validation_array[] = array('value' => t('Length'),'type' => 'input_text',
	'required' => TRUE,'vtype' => 1,'vmax' => 11);
    $data_array[]   = array('length' => $_POST['length']);
    $column_array[] = 'length';
	
	$validation_array[] = array('value' => t('Breadth'),'type' => 'input_text',
	'required' => TRUE,'vtype' => 1,'vmax' => 11);
    $data_array[]   = array('breadth' => $_POST['breadth']);
    $column_array[] = 'breadth';
	
	$validation_array[] = array('value' => t('Width'),'type' => 'input_text',
	'required' => TRUE,'vtype' => 1,'vmax' => 11);
    $data_array[]   = array('width' => $_POST['width']);
    $column_array[] = 'width';
	
	$validation_array[] = array('value' => t('Dimension Unit'),'type' => 'input_text',
	'required' => TRUE,'vtype' => 2,'vmax' => 50);
    $data_array[]   = array('dimension_unit' => $_POST['dimension_unit']);
    $column_array[] = 'dimension_unit';
	
	$validation_array[] = array('value' => t('Leed Distance'),'type' => 'radio',
    'required' => TRUE,'vtype' => 2,'vmax' => 255);
    $data_array[]   = array('leed_distance' => $_POST['leed_distance']);
    $column_array[] = 'leed_distance';
	
    $validation_array[] = array('value' => t('Recommended Cleaning'),'type' => 'input_text',
	'required' => TRUE,'vtype' => 2,'vmax' => 100);
    $data_array[]   = array('recommended_cleaning' => $_POST['recommended_cleaning']);
    $column_array[] = 'recommended_cleaning';
	
	$validation_array[] = array('value' => t('ASTM Type'),'type' => 'radio',
    'required' => TRUE,'vtype' => 2,'vmax' => 50);
    $data_array[]   = array('astm_type' => $_POST['astm_type']);
    $column_array[] = 'astm_type';
	
	$validation_array[] = array('value' => t('Master Format'),'type' => 'radio',
    'required' => TRUE,'vtype' => 2,'vmax' => 100);
    $data_array[]   = array('master_format_2010' => $_POST['master_format_2010']);
    $column_array[] = 'master_format_2010';
	
	$validation_array[] = array('value' => t('ASTM Specification'),'type' => 'radio',
    'required' => TRUE,'vtype' => 2,'vmax' => 30);
    $data_array[]   = array('astm_specification' => $_POST['astm_specification']);
    $column_array[] = 'astm_specification';

    $validation_array[] = array('value' => t('Status'),'type' => 'radio',
    'required' => TRUE,'vtype' => 0,'vmax' => 1,'enum'=>'1~0');
    $data_array[]   = array('is_active' => $_POST['is_active']);
    $column_array[] = 'is_active';

    $cnt = count($validation_array);
    $error_flag = false;
    $success_flag = false;
    for($i=0;$i<$cnt;$i++){
        if(!$utility_obj->validate_form_field($validation_array[$i],$data_array[$i],
        $column_array[$i])){
            $error_flag = true;
            $utility_obj->set_flash_message($_SESSION['errorMessage'],'error');
            break;
        }
    }

    if(!$error_flag){
        //check duplicate values
        if($product_obj->check_duplicate_column('name',$_POST['name'])){
            $error_flag = true;
            $utility_obj->set_flash_message(t('This product name already exists'),
            'error');
        }
		
		if($product_obj->check_duplicate_column('product_number',$_POST['product_number'])){
            $error_flag = true;
            $utility_obj->set_flash_message(t('This product number already exists'),
            'error');
        }
		
		$image_name='';
		if(!$error_flag){
			$target_path = PRODUCT_IMAGE_PHYSICAL_PATH;
			if (!empty($_FILES['image_path']['name'])) {
				$temp_file = $_FILES['image_path']['tmp_name'];
				$temp_name = $_FILES['image_path']['name'];
				$file_parts = pathinfo($_FILES['image_path']['name']);
				$image_name = 'product'.time().'.'.$file_parts['extension'];
				$target_file = rtrim($target_path,'/') . '/' . $image_name;
				$file_types = array('jpg','jpeg','gif','png');
				if($_FILES['image_path']['name'] !='' 
				 && $_FILES['image_path']['tmp_name'] == ''){
					$utility_obj->set_flash_message(t('Manimum file size exceeds'),
					'error');
				}
				else if($_FILES['image_path']['size']>IMAGE_MAX_UPLOAD_B){
					$utility_obj->set_flash_message(t('Maximum file size exceeds'),
					'error');
				}
				else if (in_array(strtolower($file_parts['extension']),$file_types)){
					$utility_obj->make_thumbnail_image($temp_file,$target_file,PRODUCT_IMAGE_WIDTH);
				} else {
					$utility_obj->set_flash_message(t('Invalid file type.'),
					'error');
				}
			
			}
		}
		
        if(!$error_flag){
            $data['name']					= $_POST['name'];
			$data['manufacturer_id']		= $_POST['manufacturer_id'];
			$data['leed_distance']			= trim($_POST['leed_distance']);
			$data['recommended_cleaning']	= trim($_POST['recommended_cleaning']);
			$data['astm_type']				= trim($_POST['astm_type']);
			$data['master_format_2010']		= trim($_POST['master_format_2010']);
			$data['astm_specification']		= trim($_POST['astm_specification']);
			$data['product_number']			= trim($_POST['product_number']);
			$data['description']			= trim($_POST['description']);
			$data['catalog']				= trim($_POST['catalog']);
			$data['length']					= trim($_POST['length']);
			$data['breadth']				= trim($_POST['breadth']);
			$data['width']					= trim($_POST['width']);
			$data['dimension_unit']			= trim($_POST['dimension_unit']);
			$data['image_path']				= $image_name;
            $data['is_active']				= $_POST['is_active'];
            $returnId = $product_obj->save_product_data($data);
            if($returnId){
                $success_flag = true;
                $utility_obj->set_flash_message(t('Data saved successfully'),
                'success');
                $page_urlArray = explode('rurl', $_SERVER['QUERY_STRING']);
                $utility_obj->redirect_user(URL.'product/ProductAdd&fancy=1');
                exit;
            }else{
                $error_flag = true;
                $utility_obj->set_flash_message(t('Data could not be saved'),
                'error');
            }
        }
    }
}

// Get manufacture detail
require_once('./model/manufacturer/Manufacturer.php');
$manufacturer_obj = new Manufacturer($db_obj);   

$manufacturers_data  = $manufacturer_obj->get_manufacturer_list(' company ASC', '', '');
$manufacturers_array = array();
$manufacturers_array[] = t('Select');
if(is_array($manufacturers_data) && count($manufacturers_data)){
    foreach ($manufacturers_data as $manufacturer){
        $manufacturers_array[$manufacturer['id']] = $manufacturer['company'];
    }
}
$selected_manufacturer = trim($_POST['manufacturer_id']);

// Get plant detail
require_once('./model/plant/Plant.php');
$plant_obj = new Plant($db_obj);   

$plant_data  = $plant_obj->get_plant_list(' plant_name ASC', '', '');
$plant_array = array();
$plant_array[] = t('Select');
if(is_array($plant_data) && count($plant_data)){
    foreach ($plant_data as $plant){
        $plant_array[$plant['id']] = $plant['plant_name'];
    }
}
$selected_plant = trim($_POST['leed_distance']);

// Get manufacture detail
require_once('./model/size/Size.php');
$size_obj = new Size($db_obj);   

$size_data  = $size_obj->get_size_list(' name ASC', '', '');
$size_array = array();
$size_array[] = t('Select');
if(is_array($size_data) && count($size_data)){
    foreach ($size_data as $size){
        $size_array[$size['id']] = $size['name'];
    }
}
$selected_size = trim($_POST['recommended_cleaning']);

// Get texture detail
require_once('./model/texture/Texture.php');
$texture_obj = new Texture($db_obj);   

$texture_data  = $texture_obj->get_texture_list(' name ASC', '', '');
$texture_array = array();
$texture_array[] = t('Select');
if(is_array($texture_data) && count($texture_data)){
    foreach ($texture_data as $texture){
        $texture_array[$texture['id']] = $texture['name'];
    }
}
$selected_texture = trim($_POST['astm_type']);

// Get mortar detail
require_once('./model/mortar/Mortar.php');
$mortar_obj = new Mortar($db_obj);   

$mortar_data  = $mortar_obj->get_mortar_list(' name ASC', '', '');
$mortar_array = array();
$mortar_array[] = t('Select');
if(is_array($mortar_data) && count($mortar_data)){
    foreach ($mortar_data as $mortar){
        $mortar_array[$mortar['id']] = $mortar['name'];
    }
}
$selected_mortar = trim($_POST['master_format_2010']);

// Get color detail
require_once('./model/color/Color.php');
$color_obj = new Color($db_obj);   

$color_data  = $color_obj->get_color_list(' name ASC', '', '');
$color_array = array();
$color_array[] = t('Select');
if(is_array($color_data) && count($color_data)){
    foreach ($color_data as $color){
        $color_array[$color['id']] = $color['name'];
    }
}
$selected_color = trim($_POST['astm_specification']);


$noRecords = false;
require_once('./view/product/ProductAdd.php');
?>